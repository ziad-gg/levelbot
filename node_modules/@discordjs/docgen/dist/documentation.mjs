import{dirname as k,relative as h,join as u}from"node:path";import{DocumentedClass as d}from"./types/class.mjs";import{DocumentedConstructor as p}from"./types/constructor.mjs";import{DocumentedEvent as g}from"./types/event.mjs";import{DocumentedExternal as $}from"./types/external.mjs";import{DocumentedInterface as y}from"./types/interface.mjs";import{DocumentedMember as w}from"./types/member.mjs";import{DocumentedMethod as m}from"./types/method.mjs";import{DocumentedTypeDef as b}from"./types/typedef.mjs";import N from"./package.mjs";class f{constructor(i,t,c){if(this.config=t,this.custom=c,this.classes=new Map,this.functions=new Map,this.interfaces=new Map,this.typedefs=new Map,this.externals=new Map,t.typescript){const e=i;for(const n of e)switch(n.kindString){case"Class":{this.classes.set(n.name,new d(n,t)),n.children&&this.parse(n.children,n);break}case"Function":{this.functions.set(n.name,new m(n,t));break}case"Interface":case"Type alias":case"Enumeration":this.typedefs.set(n.name,new b(n,t)),n.children&&this.parse(n.children,n);break}}else{let e=i;e=e.filter(n=>!n.ignore);for(const n of e)switch(n.kind){case"class":{this.classes.set(n.name,new d(n,t)),e=e.filter(s=>s.longname!==n.longname||s.kind!==n.kind);break}case"function":{(n.scope==="global"||!n.memberof)&&(this.functions.set(n.name,new m(n,t)),e=e.filter(s=>s.longname!==n.longname));break}case"interface":{this.interfaces.set(n.name,new y(n,t)),e=e.filter(s=>s.longname!==n.longname);break}case"typedef":{this.typedefs.set(n.name,new b(n,t)),e=e.filter(s=>s.longname!==n.longname);break}case"external":{this.externals.set(n.name,new $(n,t)),e=e.filter(s=>s.longname!==n.longname);break}}this.parse(e)}}parse(i,t){if(this.config.typescript){const c=i;for(const e of c){let n=null;switch(e.kindString){case"Constructor":{n=new p(e,this.config);break}case"Method":{if(t?.groups?.find(r=>r.title==="Events")?.children?.includes(e.id)){n=new g(e,this.config);break}n=new m(e,this.config);break}case"Property":{n=new w(e,this.config);break}default:console.warn(`- Unknown documentation kind "${e.kindString}" - 
${JSON.stringify(e)}
`)}const s=this.classes.get(t.name)??this.interfaces.get(t.name);if(s){n?s.add(n):console.warn(`- Documentation item could not be constructed for "${e.name}" - 
${JSON.stringify(e)}
`);continue}const a=[],l=(e.name||n?.data.name)??"UNKNOWN",o=e.kindString==="constructor"?null:{file:e.sources?.[0]?.fileName,line:e.sources?.[0]?.line,path:k(e.sources?.[0]?.fileName??"")};t.name&&a.push(`member of "${t.name}"`),o&&a.push(`${h(this.config.root,u(o.path,o.file??""))}${o.line?`:${o.line}`:""}`),console.warn(`- "${l}"${a.length?` (${a.join(", ")})`:""} has no accessible parent.`),!l&&!a.length&&console.warn("Raw object:",e)}}else{const c=i;for(const e of c){let n=null;switch(e.kind){case"constructor":{n=new p(e,this.config);break}case"function":{n=new m(e,this.config);break}case"member":{n=new w(e,this.config);break}case"event":{n=new g(e,this.config);break}default:console.warn(`- Unknown documentation kind "${e.kind}" - 
${JSON.stringify(e)}
`)}const s=this.classes.get(e.memberof??"")??this.interfaces.get(e.memberof??"");if(s){n?s.add(n):console.warn(`- Documentation item could not be constructed for "${e.name}" - 
${JSON.stringify(e)}
`);continue}const a=[],l=(e.name||n?.data.name)??"UNKNOWN",o=e.memberof??n?.data?.memberof,r=e.kind==="constructor"?null:{file:e.meta.filename,line:e.meta.lineno,path:e.meta.path};o&&a.push(`member of "${o}"`),r&&a.push(`${h(this.config.root,u(r.path,r.file))}${r.line?`:${r.line}`:""}`),console.warn(`- "${l}"${a.length?` (${a.join(", ")})`:""} has no accessible parent.`),!l&&!a.length&&console.warn("Raw object:",e)}}}serialize(){return{meta:{generator:N.version,format:f.FORMAT_VERSION,date:Date.now()},classes:[...this.classes.values()].map(i=>i.serialize()),functions:[...this.functions.values()].map(i=>i.serialize()),interfaces:[...this.interfaces.values()].map(i=>i.serialize()),typedefs:[...this.typedefs.values()].map(i=>i.serialize()),externals:[...this.externals.values()].map(i=>i.serialize()),custom:this.custom}}static get FORMAT_VERSION(){return 30}}export{f as Documentation};
//# sourceMappingURL=documentation.mjs.map
