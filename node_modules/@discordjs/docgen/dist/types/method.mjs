import{DocumentedItemMeta as o}from"./item-meta.mjs";import{DocumentedItem as g}from"./item.mjs";import{DocumentedParam as m}from"./param.mjs";import{DocumentedVarType as c}from"./var-type.mjs";import{parseType as u}from"../util/parseType.mjs";class f extends g{serializer(){if(this.config.typescript){const s=this.data,i=(s.signatures??[])[0]??s;let r;const n=s.sources?.[0];n&&(r=new o(n,this.config).serialize());const d=i.comment?.blockTags?.filter(e=>e.tag==="@see").length?i.comment.blockTags.filter(e=>e.tag==="@see").map(e=>e.content.find(a=>a.kind==="text")?.text.trim()):void 0,p=i.comment?.blockTags?.filter(e=>e.tag==="@example").length?i.comment.blockTags.filter(e=>e.tag==="@example").map(e=>e.content.reduce((a,l)=>a+=l.text,"").trim()):void 0;return{name:i.name,description:i.comment?.summary?.reduce((e,a)=>e+=a.text,"").trim()||void 0,see:d,scope:s.flags.isStatic?"static":void 0,access:s.flags.isPrivate||i.comment?.blockTags?.some(e=>e.tag==="@private"||e.tag==="@internal")?"private":void 0,examples:p,abstract:i.comment?.blockTags?.some(e=>e.tag==="@abstract")||void 0,deprecated:i.comment?.blockTags?.some(e=>e.tag==="@deprecated")?i.comment.blockTags.find(e=>e.tag==="@deprecated")?.content.reduce((e,a)=>e+=a.text,"").trim()??!0:void 0,params:i.parameters?i.parameters?.map(e=>new m(e,this.config).serialize()):void 0,returns:i.type?[new c({names:[u(i.type)],description:i.comment?.blockTags?.find(e=>e.tag==="@returns")?.content.reduce((e,a)=>e+=a.text,"").trim()||void 0},this.config).serialize()]:void 0,returnsDescription:i.comment?.blockTags?.find(e=>e.tag==="@returns")?.content.reduce((e,a)=>e+=a.text,"").trim()||void 0,meta:r}}const t=this.data;return{name:t.name,description:t.description,see:t.see,scope:t.scope,access:t.access,inherits:t.inherits,inherited:t.inherited,implements:t.implements,examples:t.examples,abstract:t.virtual&&!t.inherited,deprecated:t.deprecated,emits:t.fires,throws:t.exceptions,params:t.params?.length?t.params.map(s=>new m(s,this.config).serialize()):void 0,async:t.async,generator:t.generator,returns:t.returns?.length?t.returns.map(s=>new c({names:s.type.names,description:s.description,nullable:s.nullable},this.config).serialize()):void 0,meta:new o(t.meta,this.config).serialize()}}}export{f as DocumentedMethod};
//# sourceMappingURL=method.mjs.map
